page.includeCSS.cardcontent = {$cardcontent.styles}

lib.cardcontent =< lib.contentElement
lib.cardcontent.templateRootPaths.10 = EXT:cardcontent/Resources/Private/Templates/
lib.cardcontent.templateRootPaths.20 = {$cardcontent.templateRootPath}
lib.cardcontent.partialRootPaths.10 = EXT:cardcontent/Resources/Private/Partials/
lib.cardcontent.partialRootPaths.20 = {$cardcontent.partialRootPath}
lib.cardcontent.layoutRootPaths.10 = EXT:cardcontent/Resources/Private/Layouts/
lib.cardcontent.layoutRootPaths.20 = {$cardcontent.layoutRootPath}

lib.inlineSVG = SVG
lib.inlineSVG {
    renderMode = inline
    src.stdWrap.cObject = FILES
    src.stdWrap.cObject {
        references {
            table = tt_content
            fieldName = assets
        }
        begin = 0
        maxItems = 1
        renderObj = TEXT
        renderObj.value.data = file:current:publicUrl
        renderObj.if.value = svg
        renderObj.if.equals.data = file:current:extension
    }
}

tt_content.cardcontent =< lib.cardcontent
tt_content.cardcontent {
    templateName = Cardcontent
    dataProcessing {
        10 = TYPO3\CMS\Frontend\DataProcessing\FilesProcessor
        10 {
            references.fieldName = assets
            as = assets
        }
    }
    settings {
        imageWidth = {$cardcontent.imageWidth}
    }
    variables {
        inlineSVG =< lib.inlineSVG
    }
    stdWrap {
        editIcons = tt_content: header [header_layout], tt_content
        editIcons.iconTitle.data = LLL:EXT:fluid_styled_content/Resources/Private/Language/FrontendEditing.xlf:editIcon.menu
    }
}
